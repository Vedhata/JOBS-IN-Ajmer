<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Resume Builder</title>
    <meta name="description" content="Create a professional and attractive resume in minutes with our easy-to-use, customizable resume builder. Choose your colors, fonts, and layouts.">
    <meta name="keywords" content="resume builder, cv builder, online resume maker, professional resume">
    
    <!-- Tailwind CSS for rapid UI development -->
    <script src="https://cdn.tailwindcss.com"></script>
    
    <!-- Font Awesome for Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Roboto:wght@300;400;500;700&family=Lato:wght@300;400;700&family=Montserrat:wght@300;400;500;600;700&display=swap" rel="stylesheet">
</head>
<body class="font-sans">

    <!-- Header Section -->
    <header class="p-6 text-white shadow-lg animated-gradient no-print">
        <div class="container mx-auto text-center">
            <h1 class="text-4xl font-bold tracking-tight">Resume Builder</h1>
            <p class="mt-2 text-lg opacity-90">Craft your perfect professional resume in real-time</p>
        </div>
    </header>

    <main class="container mx-auto p-4 md:p-8">
        <div class="grid grid-cols-1 lg:grid-cols-12 gap-8">

            <!-- Left Side: Editor/Controls -->
            <div class="lg:col-span-4 no-print">
                <div class="sticky top-8">
                    <!-- Customization Card -->
                    <div class="editor-card">
                        <h3 class="text-lg font-semibold p-4 flex items-center gap-3"><i class="fas fa-palette"></i> Customize Design</h3>
                        <div class="p-4 space-y-4">
                            <!-- Font Style -->
                            <div>
                                <label for="font-family" class="block text-sm font-medium text-gray-700 mb-1">Font Style</label>
                                <select id="font-family" class="form-select">
                                    <option value="'Poppins', sans-serif">Poppins</option>
                                    <option value="'Roboto', sans-serif">Roboto</option>
                                    <option value="'Lato', sans-serif">Lato</option>
                                    <option value="'Montserrat', sans-serif">Montserrat</option>
                                    <option value="serif">Serif (Georgia)</option>
                                </select>
                            </div>
                            <!-- Color Pickers -->
                            <div class="color-input-wrapper">
                                <label for="theme-color" class="text-sm font-medium text-gray-700">Theme Color (Sidebar)</label>
                                <input type="color" id="theme-color" value="#FF5722">
                            </div>
                            <div class="color-input-wrapper">
                                <label for="heading-color" class="text-sm font-medium text-gray-700">Main Headings Color</label>
                                <input type="color" id="heading-color" value="#FF5722">
                            </div>
                            <div class="color-input-wrapper">
                                <label for="sidebar-text-color" class="text-sm font-medium text-gray-700">Sidebar Text</label>
                                <input type="color" id="sidebar-text-color" value="#FFFFFF">
                            </div>
                             <div class="color-input-wrapper">
                                <label for="subheading-color" class="text-sm font-medium text-gray-700">Subheading Color</label>
                                <input type="color" id="subheading-color" value="#1F2937">
                            </div>
                             <div class="color-input-wrapper">
                                <label for="body-text-color" class="text-sm font-medium text-gray-700">Body Text Color</label>
                                <input type="color" id="body-text-color" value="#4B5563">
                            </div>
                        </div>
                         <div class="p-4 bg-gray-50 border-t">
                            <button onclick="printResume()" class="action-button w-full flex items-center justify-center gap-2">
                                <i class="fas fa-print"></i> Print / Save as PDF
                            </button>
                        </div>
                    </div>

                    <!-- Personal Details Card -->
                    <div class="editor-card">
                         <h3 class="text-lg font-semibold p-4 flex items-center gap-3"><i class="fas fa-user-circle"></i> Personal Details</h3>
                        <div class="p-4 space-y-4">
                            <input type="text" id="name" class="form-input" placeholder="Your Name" value="Ved Prakash">
                            <input type="text" id="title" class="form-input" placeholder="Your Job Title" value="Creative Web Developer">
                             <input type="tel" id="phone" class="form-input" placeholder="Phone" value="+911234567890">
                            <input type="email" id="email" class="form-input" placeholder="Email" value="contact@jobsinajmer.in">
                            <input type="text" id="address" class="form-input" placeholder="Address" value="Ajmer, Rajasthan, India">
                            <input type="url" id="linkedin" class="form-input" placeholder="LinkedIn Profile" value="https://www.jobsinajmer.in/">
                            <input type="url" id="website" class="form-input" placeholder="Portfolio/Website URL" value="https://www.jobsinajmer.in/">
                        </div>
                    </div>
                    
                    <!-- Other Sections Card -->
                    <div class="editor-card">
                         <h3 class="text-lg font-semibold p-4 flex items-center gap-3"><i class="fas fa-file-alt"></i> Other Sections</h3>
                        <div class="p-4 space-y-4">
                            <label for="summary" class="block text-sm font-medium text-gray-700 -mb-2">Professional Summary</label>
                            <textarea id="summary" class="form-textarea" rows="4" placeholder="A brief summary...">A passionate and detail-oriented Web Developer with 5+ years of experience in building and maintaining responsive and user-friendly web applications. Proficient in HTML, CSS, JavaScript, and modern frameworks like React and Vue.js.</textarea>
                            
                            <label for="experience" class="block text-sm font-medium text-gray-700 -mb-2">Experience (Use '|' for new lines)</label>
                            <textarea id="experience" class="form-textarea" rows="5" placeholder="Company | Title | YYYY-YYYY | Description...">Tech Solutions Inc. | Senior Web Developer | 2020-Present | Led the development of a new e-commerce platform, resulting in a 30% increase in sales. | Mentored junior developers and conducted code reviews.
---
Web Innovators LLC | Junior Developer | 2018-2020 | Developed and maintained client websites using WordPress. | Collaborated with the design team.</textarea>

                            <label for="education" class="block text-sm font-medium text-gray-700 -mb-2">Education (Use '|' for new lines)</label>
                            <textarea id="education" class="form-textarea" rows="4" placeholder="University | Degree | YYYY-YYYY | Grade/GPA...">University of Technology | B.Tech in Computer Science | 2014-2018 | GPA: 3.8/4.0</textarea>

                            <label for="projects" class="block text-sm font-medium text-gray-700 -mb-2">Projects (Use '|' for new lines)</label>
                            <textarea id="projects" class="form-textarea" rows="4" placeholder="Project Name | Description | Tech Stack...">Portfolio Website | A personal portfolio to showcase my work and skills. | HTML, Tailwind CSS, JavaScript | --- | E-commerce Dashboard | An analytics dashboard for an e-commerce client. | React, D3.js, Firebase</textarea>

                            <label for="skills" class="block text-sm font-medium text-gray-700 -mb-2">Skills (Comma separated)</label>
                            <input type="text" id="skills" class="form-input" placeholder="e.g., HTML, CSS, JavaScript" value="HTML5, CSS3, Tailwind CSS, JavaScript (ES6+), React, Vue.js, Node.js, Git, Figma, Problem Solving">
                        
                            <label for="languages" class="block text-sm font-medium text-gray-700 -mb-2">Languages (Comma separated)</label>
                            <input type="text" id="languages" class="form-input" placeholder="e.g., English, Spanish" value="English (Fluent), Hindi (Native)">
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Side: Resume Preview -->
            <div class="lg:col-span-8">
                <div id="resume-preview">
                    <!-- Resume Content will be dynamically generated here -->
                </div>
            </div>
        </div>
    </main>

    <script>
        // Function to update the resume preview in real-time
        function updateResume() {
            const values = {
                name: document.getElementById('name').value,
                title: document.getElementById('title').value,
                phone: document.getElementById('phone').value,
                email: document.getElementById('email').value,
                address: document.getElementById('address').value,
                linkedin: document.getElementById('linkedin').value,
                website: document.getElementById('website').value,
                summary: document.getElementById('summary').value,
                experience: document.getElementById('experience').value,
                education: document.getElementById('education').value,
                projects: document.getElementById('projects').value,
                skills: document.getElementById('skills').value,
                languages: document.getElementById('languages').value,
            };

            const contactInfo = [
                { value: values.phone, icon: 'fas fa-phone' },
                { value: values.email, icon: 'fas fa-envelope' },
                { value: values.address, icon: 'fas fa-map-marker-alt' },
                { value: values.linkedin, icon: 'fab fa-linkedin' },
                { value: values.website, icon: 'fas fa-globe' },
            ].filter(item => item.value).map(item => `
                <div class="flex items-start mb-3 text-sm">
                    <i class="${item.icon} w-5 text-center mr-3 mt-1 opacity-80"></i>
                    <span class="flex-1 break-all">${item.value}</span>
                </div>`).join('');

            const skillsHtml = values.skills ? values.skills.split(',').map(skill => `<span class="skill-badge inline-block text-xs font-medium mr-2 mb-2 px-3 py-1 rounded-full">${skill.trim()}</span>`).join('') : '';
            const languagesHtml = values.languages ? `<p class="text-sm">${values.languages.replace(/,/g, ', ')}</p>` : '';

            const experienceHtml = values.experience.split('---').map(exp => {
                if (!exp.trim()) return '';
                const [company, jobTitle, years, ...descriptions] = exp.trim().split('|').map(p => p.trim());
                const descList = descriptions.map(d => `<li class="ml-5">${d}</li>`).join('');
                return `<div class="mb-4">
                            <div class="flex justify-between items-baseline">
                                <h3 class="text-lg font-semibold">${company || ''}</h3>
                                <p class="text-sm font-medium text-gray-500">${years || ''}</p>
                            </div>
                            <p class="text-md italic">${jobTitle || ''}</p>
                            <ul class="list-disc mt-1 text-sm">${descList}</ul>
                        </div>`;
            }).join('');
            
            const educationHtml = values.education.split('---').map(edu => {
                if (!edu.trim()) return '';
                const [school, degree, years, grade] = edu.trim().split('|').map(s => s.trim());
                return `<div class="mb-2">
                            <div class="flex justify-between items-baseline">
                               <h3 class="text-lg font-semibold">${school || ''}</h3>
                               <p class="text-sm font-medium text-gray-500">${years || ''}</p>
                            </div>
                            <p class="text-md italic">${degree || ''}</p>
                            ${grade ? `<p class="text-sm">${grade}</p>` : ''}
                        </div>`;
            }).join('');
            
            const projectsHtml = values.projects.split('---').map(proj => {
                if (!proj.trim()) return '';
                const [name, desc, stack] = proj.trim().split('|').map(s => s.trim());
                return `<div class="mb-4">
                            <h3 class="text-lg font-semibold">${name || ''}</h3>
                            <p class="text-sm mb-1">${desc || ''}</p>
                            ${stack ? `<p class="text-sm"><strong>Tech Stack:</strong> ${stack}</p>` : ''}
                        </div>`;
            }).join('');
            
            const generateRightSection = (title, content, id) => content.trim() ? `<section id="section-${id}" class="mb-6">
                <h2 class="text-xl font-bold border-b-2 pb-1 mb-3">${title}</h2>
                <div class="leading-relaxed">${content}</div>
                </section>` : '';

            const generateLeftSection = (title, content) => content.trim() ? `<section class="mb-6">
                <h3 class="text-lg font-bold uppercase tracking-wider border-b-2 border-current border-opacity-50 pb-1 mb-3">${title}</h3>
                <div class="opacity-90 leading-relaxed">${content}</div>
                </section>` : '';

            const resumeHtml = `<div class="flex flex-col md:flex-row min-h-full">
                    <aside class="left-column w-full md:w-1/3 p-6 md:p-8">
                        <div class="mb-8 text-center md:text-left">
                            <h1 class="text-4xl font-bold tracking-wider">${values.name || 'Your Name'}</h1>
                            <p class="text-xl opacity-90 mt-1">${values.title || 'Your Title'}</p>
                        </div>
                        ${generateLeftSection('Contact', contactInfo)}
                        ${generateLeftSection('Skills', skillsHtml)}
                        ${generateLeftSection('Languages', languagesHtml)}
                    </aside>
                    <main class="right-column w-full md:w-2/3 p-6 md:p-8">
                        ${generateRightSection('Professional Summary', values.summary.replace(/\n/g, '<br>'), 'summary')}
                        ${generateRightSection('Work Experience', experienceHtml, 'experience')}
                        ${generateRightSection('Education', educationHtml, 'education')}
                        ${generateRightSection('Projects', projectsHtml, 'projects')}
                    </main>
                </div>`;

            document.getElementById('resume-preview').innerHTML = resumeHtml;
        }

        // Function to handle all theme and color changes
        function handleThemeChange() {
            const root = document.documentElement;
            root.style.setProperty('--primary-color', document.getElementById('theme-color').value);
            root.style.setProperty('--heading-color', document.getElementById('heading-color').value);
            root.style.setProperty('--sidebar-text-color', document.getElementById('sidebar-text-color').value);
            root.style.setProperty('--subheading-color', document.getElementById('subheading-color').value);
            root.style.setProperty('--body-text-color', document.getElementById('body-text-color').value);
            root.style.setProperty('--font-family', document.getElementById('font-family').value);
            // No need to call updateResume() here as styles are applied directly via CSS variables
        }
        
        // Function to print the resume
        function printResume() {
            window.print();
        }

        // Add event listeners to all input fields for content changes
        document.querySelectorAll('input, textarea').forEach(element => {
            // Exclude color inputs from this listener
            if (element.type !== 'color') {
                element.addEventListener('input', updateResume);
            }
        });

        // Add event listeners for all design controls (font and colors)
        document.querySelectorAll('#font-family, input[type="color"]').forEach(element => {
            element.addEventListener('input', handleThemeChange);
        });
        
        // Initial call to populate the resume on page load
        window.onload = () => {
             updateResume();
             handleThemeChange();
        };
    </script>
</body>
</html>
